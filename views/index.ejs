<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Live Location Viewer</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css"/>
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script src="https://cdn.socket.io/4.6.1/socket.io.min.js"></script>
  <style>
    body { margin: 0; }
    #map { height: 100vh; width: 100%; }
  </style>
</head>
<body>
  <div id="map"></div>

  <script>
    const vechId = "bus123"; // Hardcoded for now, can make dynamic later
    const map = L.map("map").setView([16.6840, 74.4737], 15);

    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      maxZoom: 19
    }).addTo(map);

    let pathCoords = [];
    let polyline = L.polyline(pathCoords, { color: "blue" }).addTo(map);
    let marker;

    const socket = io({ query: { vechId } });

    socket.on("connect", () => {
      console.log("Connected, joining bus:", vechId);
      socket.emit("joinBus");
    });

    socket.on("joinedBus", (data) => {
      console.log(`Joined bus room: ${data.vechId}`);
    });

    socket.on("location", (location) => {
      console.log("Received:", location);

      // Add new point
      pathCoords.push([location.lat, location.lng]);

      // Update line
      polyline.setLatLngs(pathCoords);

      // Update marker
      if (marker) {
        marker.setLatLng([location.lat, location.lng]);
      } else {
        marker = L.marker([location.lat, location.lng]).addTo(map);
      }

      // Center map on new point
      map.setView([location.lat, location.lng]);
    });

    socket.on("joinError", (err) => {
      alert("Error: " + err.message);
    });
  </script>
</body>
</html>
