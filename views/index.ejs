<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Live Location Logger</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <style>
    #map { height: 400px; width: 100%; }
    #logs {
      max-height: 300px;
      overflow-y: auto;
      background: #111;
      color: #0f0;
      padding: 10px;
      font-family: monospace;
      border-radius: 6px;
      margin-top: 10px;
    }
  </style>
</head>
<body>
  <h2>Live Location Tracker with Logs</h2>
  <div id="map"></div>
  <h3>Logs</h3>
  <div id="logs"></div>

  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script>
    const map = L.map('map').setView([0, 0], 2);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      maxZoom: 19,
    }).addTo(map);

    let marker;
    const logsDiv = document.getElementById("logs");

    function logMessage(message) {
      const p = document.createElement("p");
      p.textContent = message;
      logsDiv.appendChild(p);
      logsDiv.scrollTop = logsDiv.scrollHeight;
    }

    // Start watching position
    if (navigator.geolocation) {
      navigator.geolocation.watchPosition(
        async (pos) => {
          const lat = pos.coords.latitude;
          const lng = pos.coords.longitude;

          // Update marker
          if (!marker) {
            marker = L.marker([lat, lng]).addTo(map);
            map.setView([lat, lng], 15);
          } else {
            marker.setLatLng([lat, lng]);
          }

          // Log request
          const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`;
          logMessage("Request → " + url);

          try {
            const res = await fetch(url, { headers: { "User-Agent": "LocationLoggerApp" } });
            const data = await res.json();

            // Log response
            logMessage("Response ← " + JSON.stringify(data));

          } catch (err) {
            logMessage("Error ← " + err.message);
          }
        },
        (err) => {
          logMessage("Geolocation Error: " + err.message);
        },
        { enableHighAccuracy: true }
      );
    } else {
      logMessage("Geolocation not supported in this browser.");
    }
  </script>
</body>
</html>
